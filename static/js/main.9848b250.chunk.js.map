{"version":3,"sources":["images/crypto.png","components/Navbar.jsx","services/cryptoNewsApi.js","services/cryptoApi.js","components/Loader.jsx","components/News.jsx","components/Homepage.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setactiveMenu","screenSize","setscrenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","style","color","textAlign","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoNewsHeaders","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","newsCategory","count","url","headers","useGetCryptoNewsQuery","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Text","Typography","Option","Select","demoImageUrl","News","simplified","setNewsCategory","data","cryptoNews","value","gutter","span","showSearch","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","coins","map","coin","name","news","i","xs","sm","lg","hoverable","href","target","rel","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","substring","provider","moment","datePublished","startOf","fromNow","Homepage","isFetching","globalStats","stats","title","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","rank","iconUrl","volume","numberOfMarkets","marketShare","id","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","includes","e","currency","extra","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9848b250.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/crypto.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\n\nimport icon from '../images/crypto.png';\n\nconst Navbar = () => {\n    const [activeMenu, setactiveMenu] = useState(true);\n    const [screenSize, setscrenSize] = useState(null);\n\n\n    useEffect(() => {\n        const handleResize = () => setscrenSize(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n        handleResize();\n\n        return () => window.removeEventListener('resize', handleResize);\n    }, [])\n\n    useEffect(() => {\n        if (screenSize < 768) {\n            setactiveMenu(false);\n        } else {\n            setactiveMenu(true);\n        }\n    }, [screenSize])\n\n    return (\n        <div className='nav-container'>\n            <div className='logo-container'>\n                <Avatar src={icon} size='large' />\n                <Typography.Title level={2} className='logo'>\n                    <Link to=\"/\">CryptoBook</Link>\n                </Typography.Title>\n                <Button className='menu-control-container' onClick={() => setactiveMenu(!activeMenu)}>\n                    <MenuOutlined />\n                </Button>\n            </div>\n            {\n                activeMenu && (\n                    <Menu theme='dark'>\n                        <Menu.Item icon={<HomeOutlined />}>\n                            <Link style={{ color: '#EEF5B2', textAlign: 'center' }} to='/'>Home</Link>\n                        </Menu.Item>\n                        <Menu.Item icon={<FundOutlined />}>\n                            <Link style={{ color: '#EEF5B2', textAlign: 'center' }} to='/cryptocurrencies'>Cryptocurrencies</Link>\n                        </Menu.Item>\n                        <Menu.Item icon={<MoneyCollectOutlined />}>\n                            <Link style={{ color: '#EEF5B2', textAlign: 'center' }} to='/exchanges'>Exchanges</Link>\n                        </Menu.Item>\n                        <Menu.Item icon={<BulbOutlined />}>\n                            <Link style={{ color: '#EEF5B2', textAlign: 'center' }} to='/news'>News</Link>\n                        </Menu.Item>\n                    </Menu>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default Navbar\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n\nconst cryptoNewsHeaders ={\n    'x-bingapis-sdk': 'true',\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n    'x-rapidapi-key': 'd795149401msha79e75d7202b7d0p1a1d38jsne9edbd918063'\n}\n\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\n\nexport const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptoNews: builder.query({\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n        }),\n    }),\n});\n\n\n\nexport const {\n    useGetCryptoNewsQuery,\n} = cryptoNewsApi;\n\n\n\n\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n    'x-rapidapi-key': 'd795149401msha79e75d7202b7d0p1a1d38jsne9edbd918063'\n};\n\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n    reducerPath: 'cryptoApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n        getCryptos: builder.query({\n            query: (count) => createRequest(`/coins/?limit=${count}`),\n        }),\n        getCryptoDetails: builder.query({\n            query: (coinId) => createRequest(`/coin/${coinId}`),\n        }),\n        getCryptoHistory: builder.query({\n            query: ({ coinId, timeperiod }) => createRequest(`/coin/${coinId}/history/${timeperiod}`),\n        }),\n        getExchanges: builder.query({\n            query: () => createRequest('/exchanges'),\n        })\n    })\n});\n\nexport const {\n    useGetCryptosQuery,\n    useGetCryptoDetailsQuery,\n    useGetCryptoHistoryQuery,\n    useGetExchangesQuery\n} = cryptoApi;\n\n\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => {\n    return (\n        <div className='loader'>\n            <Spin />\n\n        </div>\n    )\n}\n\nexport default Loader\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\n\nimport Loader from './Loader';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\n\n\nconst demoImageUrl = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst News = ({ simplified }) => {\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n    const { data } = useGetCryptosQuery(100);\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n    // console.log(cryptoNews);\n\n    if (!cryptoNews?.value) return <Loader/>;\n\n\n    return (\n        <Row gutter={[24, 24]}>\n            {!simplified && (\n                <Col span={24}>\n                    <Select\n                        showSearch\n                        className='select-news'\n                        placeholder='Select a Crypto'\n                        optionFilterProp='children'\n                        onChange={(value) => setNewsCategory(value)}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value='Cryptocurrency'>Cryptocurrency</Option>\n                        {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\n\n                    </Select>\n                </Col>\n            )}\n            {cryptoNews.value.map((news, i) => (\n                <Col xs={24} sm={12} lg={8} key={i}>\n                    <Card hoverable className='news-card'>\n                        <a href={news.url} target='_blank' rel='noreferrer'>\n                            <div className='news-image-container'>\n                                <Title className='news-title' level={4}>{news.name}</Title>\n                                <img style={{ maxWidth: '200px', maxHeight: '100px' }} src={news?.image?.thumbnail?.contentUrl || demoImageUrl} alt='news' />\n\n                            </div>\n                            <p>\n                                {\n                                    news.description > 100 ? `${news.description.substring(0, 100)}...`\n                                        : news.description\n                                }\n                            </p>\n                            <div className='provider-container'>\n                                <div>\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImageUrl} alt=\"\" />\n                                    <Text className='provider-name'>{news.provider[0]?.name}</Text>\n                                </div>\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n\n                            </div>\n                        </a>\n\n                    </Card>\n\n                </Col>\n            ))}\n\n        </Row>\n    )\n}\n\nexport default News\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport Loader from './Loader';\n\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport {Cryptocurrencies,News} from '../components';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n    const { data, isFetching } = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n\n    if (isFetching) return <Loader/>;\n    // console.log(data);\n\n    return (\n        <>\n            <Title level={2} className='heading'>Global Crypto Statistics</Title>\n            <Row>\n                <Col span={12}>\n                    <Statistic title='Total Cryptocurrencies' value={globalStats.total} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title='Total Exchanges' value={millify(globalStats.totalExchanges)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title='Total Market Cap' value={millify(globalStats.totalMarketCap)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title='24 Hour Volume' value={millify(globalStats.total24hVolume)} />\n                </Col>\n                <Col span={12}>\n                    <Statistic title='Total Market' value={millify(globalStats.totalMarkets)} />\n                </Col>\n            </Row>\n            <div className='home-heading-container'>\n                <Title level={2} className='home-title'>Top 10 Cryptocurrencies</Title>\n                <Title level={3} className='show-more'><Link to='/cryptocurrencies'>More</Link></Title>\n            </div>\n            <Cryptocurrencies simplified/>\n            <div className='home-heading-container'>\n                <Title level={2} className='home-title'>Latest Crypto News</Title>\n                <Title level={3} className='show-more'><Link to='/news'>More</Link></Title>\n            </div>\n            <News simplified/>\n        </>\n    )\n}\n\nexport default Homepage\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetExchangesQuery();\n    const exchangesList = data?.data?.exchanges;\n\n    if (isFetching) return <Loader/>;\n    return (\n        <>\n            <Row>\n                <Col span={6}>Exchanges</Col>\n                <Col span={6}>24h Trade Volume</Col>\n                <Col span={6}>Markets</Col>\n                <Col span={6}>Change</Col>\n            </Row>\n\n            <Row>\n                {exchangesList.map((exchange) => (\n                    <Col span={24}>\n                        <Collapse>\n                            <Panel\n                                key={exchange.id}\n                                showArrow={false}\n                                header={(\n                                    <Row key={exchange.id}>\n                                        <Col span={6}>\n                                            <Text><strong>{exchange.rank}.</strong></Text>\n                                            <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                                            <Text><strong>{exchange.name}</strong></Text>\n                                        </Col>\n                                        <Col span={6}>${millify(exchange.volume)}</Col>\n                                        <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                                        <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                                    </Row>\n                                )}\n                            >\n                                {HTMLReactParser(exchange.description || '')}\n                            </Panel>\n                        </Collapse>\n                    </Col>\n                ))}\n            </Row>\n        </>\n    )\n}\n\nexport default Exchanges\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n    const coinPrice = [];\n    const coinTimeStamp = [];\n\n    for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n        coinPrice.push(coinHistory.data.history[i].price);\n        coinTimeStamp.push(new Date(coinHistory.data.history[i].timestamp).toLocaleDateString());\n\n    }\n\n    const data = {\n        labels: coinTimeStamp,\n        datasets: [\n            {\n                label: 'Price in US$',\n                data: coinPrice,\n                fill: false,\n                backgroundColor: '#0071bd',\n                borderColor: '#0071bd'\n            }\n        ]\n    }\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true\n                    }\n                }\n            ]\n        }\n    }\n    return (\n        <>\n            <Row className='chart-header'>\n                <Title level={2} className='chart-title'>{coinName} Price Chart</Title>\n                <Col className='price-container'>\n                    <Title level={5} className='price-change'>{coinHistory?.data?.change}%</Title>\n                    <Title level={5} className='current-price'>Current {coinName} Price: ${currentPrice}</Title>\n\n                </Col>\n\n            </Row>\n            <Line data={data} options={options} />\n        </>\n    )\n}\n\nexport default LineChart\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n    const { coinId } = useParams();\n    const [timeperiod, setTimeperiod] = useState('7d');\n    const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n    const cryptoDetails = data?.data?.coin;\n\n    if (isFetching) return <Loader/>;\n\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n    const stats = [\n        { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n        { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n        { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n        { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n        { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n    ];\n\n    const genericStats = [\n        { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n        { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n        { title: 'Approved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n        { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n        { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n    ];\n\n    return (\n        <Col className=\"coin-detail-container\">\n            <Col className=\"coin-heading-container\">\n                <Title level={2} className=\"coin-name\">\n                    {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n                <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n            </Col>\n            <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n                {time.map((date) => <Option key={date}>{date}</Option>)}\n            </Select>\n            <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n            <Col className=\"stats-container\">\n                <Col className=\"coin-value-statistics\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n                    </Col>\n                    {stats.map(({ icon, title, value }) => (\n                        <Col className=\"coin-stats\">\n                            <Col className=\"coin-stats-name\">\n                                <Text>{icon}</Text>\n                                <Text>{title}</Text>\n                            </Col>\n                            <Text className=\"stats\">{value}</Text>\n                        </Col>\n                    ))}\n                </Col>\n                <Col className=\"other-stats-info\">\n                    <Col className=\"coin-value-statistics-heading\">\n                        <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n                        <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n                    </Col>\n                    {genericStats.map(({ icon, title, value }) => (\n                        <Col className=\"coin-stats\">\n                            <Col className=\"coin-stats-name\">\n                                <Text>{icon}</Text>\n                                <Text>{title}</Text>\n                            </Col>\n                            <Text className=\"stats\">{value}</Text>\n                        </Col>\n                    ))}\n                </Col>\n            </Col>\n            <Col className=\"coin-desc-link\">\n                <Row className=\"coin-desc\">\n                    <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Details</Title>\n                    {HTMLReactParser(cryptoDetails.description)}\n                </Row>\n                <Col className=\"coin-links\">\n                    <Title level={3} className=\"coin-details-heading\">Some important {cryptoDetails.name} links</Title>\n                    {cryptoDetails.links?.map((link) => (\n                        <Row className=\"coin-link\" key={link.name}>\n                            <Title level={5} className=\"link-name\">{link.type}</Title>\n                            <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n                        </Row>\n                    ))}\n                </Col>\n            </Col>\n        </Col>\n    );\n};\n\nexport default CryptoDetails;","import React, { useState, useEffect } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport Loader from './Loader';\n\n\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nconst Cryptocurrencies = ({ simplified }) => {\n    const count = simplified ? 10 : 100;\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n    const [cryptos, setCryptos] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\n        setCryptos(filteredData);\n    }, [cryptosList, searchTerm]);\n\n    if (isFetching) return <Loader/>;\n    // console.log(cryptos);\n    return (\n        <>\n        {!simplified &&(\n            <div className='search-crypto'>\n                <Input placeholder='Search' onChange={(e) => setSearchTerm(e.target.value)} />\n\n            </div>\n\n        )}\n            <Row gutter={[32, 32]} className='crypto-card-container'>\n                {cryptos?.map((currency) => (\n                    <Col xs={24} sm={12} lg={6} className='crypto-card' key={currency.id}>\n                        <Link to={`/crypto/${currency.id}`}>\n                            <Card\n                                title={`${currency.rank}. ${currency.name}`}\n                                extra={<img className='crypto-image' src={currency.iconUrl} />}\n                                hoverable\n                            >\n                                <p>Price:   {millify(currency.price)}</p>\n                                <p>Market Cap:  {millify(currency.marketCap)}</p>\n                                <p>Change:    {millify(currency.change)}%</p>\n\n                            </Card>\n\n                        </Link>\n\n                    </Col>\n                ))}\n\n            </Row>\n        </>\n    )\n}\n\nexport default Cryptocurrencies\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Navbar, Exchanges, Homepage, Cryptocurrencies, News, CryptoDetails } from './components';\n\nimport './App.css';\n\n\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <div className='navbar'>\n        <Navbar />\n      </div>\n      <div className='main'>\n        <Layout>\n          <div className='routes'>\n            <Switch>\n              <Route exact path='/'>\n                <Homepage />\n              </Route>\n              <Route exact path='/exchanges'>\n                <Exchanges />\n              </Route>\n              <Route exact path='/cryptocurrencies'>\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path='/crypto/:coinId'>\n                <CryptoDetails />\n              </Route>\n              <Route exact path='/news'>\n                <News />\n              </Route>\n            </Switch>\n\n          </div>\n        </Layout>\n        <div className='footer'>\n          <Typography.Title level={5} style={{ color: 'black', textAlign: 'center' }}>\n            CryptoBook by Vishnu Sivadas<br />\n          2021\n        </Typography.Title>\n          <Space>\n            <a className='footlink' href=\"https://www.linkedin.com/in/sivadasv/\" target='_blank'>LinkedIn</a>\n            <a className='footlink' href=\"https://github.com/VishnuSivadas1994\" target='_blank'>GitHub</a>\n\n          </Space>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\n\nexport default configureStore({\n    reducer: {\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n\n    },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}